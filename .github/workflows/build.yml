# .github/workflows/build.yml
name: CI (Lint, Tests & Manifest)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint-and-test:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        python-version: [ "3.10", "3.11", "3.12" ]
        task: [lint, test]
        device: [cpu, gpu]  # Added device selection
        exclude:
          # Lint doesn't need to run on both CPU and GPU
          - task: lint
            device: gpu

    steps:
      - uses: actions/checkout@v5

      # Setup Python for matrix
      - uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}

      # Upgrade pip
      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      # Cache pip packages
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('requirements-ci.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-

      # Lint job
      - name: Flake8 + Pylint
        if: matrix.task == 'lint'
        run: |
          pip install --no-cache-dir flake8 pylint
          echo "Running flake8..."
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          echo "Running pylint..."
          files=$(git diff --name-only origin/main...HEAD | grep '\.py$' | grep -v -e '/deprecated/' -e 'src/transformation_portal/' -e 'scripts/' || echo "")
          if [ -z "$files" ]; then
            pylint $(git ls-files '*.py' | grep -v -e '/deprecated/' -e 'src/transformation_portal/' -e 'scripts/')
          else
            pylint $files
          fi

      # Test job
      - name: Free disk space
        if: matrix.task == 'test'
        run: |
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc /opt/hostedtoolcache/CodeQL || true
          df -h

      - name: Install dependencies
        if: matrix.task == 'test'
        env:
          PIP_NO_CACHE_DIR: "1"
        run: |
          pip install --upgrade pip
          if [ "${{ matrix.device }}" = "gpu" ]; then
            echo "Installing PyTorch GPU packages..."
            pip install --no-cache-dir torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu121
          else
            echo "Installing PyTorch CPU-only packages..."
            pip install --no-cache-dir torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu
          fi
          pip install -r requirements-ci.txt
          pip install -e .
          pip install pytest
          # Fix numpy/scikit-learn ABI compatibility by reinstalling scikit-learn
          # after all other dependencies are in place, respecting version constraints
          pip install --no-cache-dir --force-reinstall --no-deps "scikit-learn>=1.3.2,<1.4"

      - name: Run tests
        if: matrix.task == 'test'
        run: pytest -v tests/

  generate-manifest:
    name: Build Montecito Manifest
    needs: [lint-and-test]
    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.12"

      - name: Upgrade pip & install deps
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir -r requirements-ci.txt

      - name: Run Montecito Manifest Tool
        id: manifest
        shell: bash
        run: |
          set -euo pipefail
          OUT="montecito_manifest.json"

          # Attempt --out flag first
          if python tools/montecito_manifest.py --help 2>/dev/null | grep -qi -- '--out'; then
            python tools/montecito_manifest.py --out "$OUT"
          else
            python tools/montecito_manifest.py
          fi

          # Detect JSON if produced under another name
          if [ ! -f "$OUT" ]; then
            CANDIDATE="$(ls -1t tools/*.json *.json 2>/dev/null | head -n1 || true)"
            [ -n "$CANDIDATE" ] && OUT="$CANDIDATE" || OUT=""
          fi

          echo "manifest_path=$OUT" >> "$GITHUB_OUTPUT"

      - name: Upload manifest artifact
        if: ${{ steps.manifest.outputs.manifest_path != '' }}
        uses: actions/upload-artifact@v5
        with:
          name: montecito-manifest
          path: ${{ steps.manifest.outputs.manifest_path }}
          if-no-files-found: error
