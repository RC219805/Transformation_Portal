name: issue-summary

on:
  issues:
    types: [opened]

jobs:
  summarize-issue:
    runs-on: ubuntu-latest
    steps:
      - name: Print issue info
        env:
          ISSUE_NUMBER: ${{ github.event.issue.number }}
          ISSUE_TITLE: ${{ github.event.issue.title }}
          ISSUE_AUTHOR: ${{ github.event.issue.user.login }}
          ISSUE_BODY: ${{ github.event.issue.body }}
        run: |
          printf 'Issue #%s\n' "$ISSUE_NUMBER"
          printf 'Title: %s\n' "$ISSUE_TITLE"
          printf 'Author: %s\n' "$ISSUE_AUTHOR"
          printf 'Body: %s\n' "$ISSUE_BODY"

      - name: Generate summary with OpenAI
        id: generate-summary
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          echo "Generating AI summary..."
          SUMMARY=$(curl -s https://api.openai.com/v1/chat/completions \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -d "{
              \"model\": \"gpt-4o-mini\",
              \"messages\": [
                {\"role\": \"system\", \"content\": \"You are an assistant that summarizes GitHub issues concisely.\"},
                {\"role\": \"user\", \"content\": \"Title: ${{ github.event.issue.title }}\n\nBody: ${{ github.event.issue.body }}\"}
              ]
            }" | jq -r '.choices[0].message.content')

          if [ -z "$SUMMARY" ]; then
            SUMMARY="⚠️ Failed to generate summary."
          fi
          echo "summary=$SUMMARY" >> "$GITHUB_OUTPUT"

      - name: Post summary comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.issue.number }}
          body: |
            **AI-generated summary:**
            ${{ steps.generate-summary.outputs.summary }}
