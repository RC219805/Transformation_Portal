name: CI (Lint, Tests & Montecito Manifest)

on:
  push:
  pull_request:

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
        task: [lint, test]

    steps:
      - uses: actions/checkout@v5

      # Setup Python
      - uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}

      # Fast lint gate
      - name: flake8 (errors only)
        if: matrix.task == 'lint'
        run: |
          python -m pip install --upgrade pip
          pip install flake8
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

      # Free disk space before heavy installs
      - name: Free disk space
        if: matrix.task == 'test'
        run: |
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc /opt/hostedtoolcache/CodeQL || true
          df -h

      # Install pinned dependencies for tests
      - name: Install test dependencies
        if: matrix.task == 'test'
        run: |
          python -m venv venv
          source venv/bin/activate
          python -m pip install --upgrade pip setuptools wheel
          case "${{ matrix.python-version }}" in
            3.10) REQ=requirements-ci-py310.txt ;;
            3.11) REQ=requirements-ci-py311.txt ;;
            3.12) REQ=requirements-ci-py312.txt ;;
          esac
          pip install -r $REQ
          pip install -e .
          pip install pytest

      # Run tests
      - name: Run tests
        if: matrix.task == 'test'
        run: |
          source venv/bin/activate
          pytest -v tests/

  build-manifest:
    name: Build Montecito Manifest
    needs: lint-and-test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      # Setup Python 3.12 for consistency
      - uses: actions/setup-python@v6
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements-ci-py312.txt
          pip install -e .

      - name: Run Montecito Manifest Tool
        id: manifest
        shell: bash
        run: |
          set -euo pipefail
          source venv/bin/activate
          OUT="montecito_manifest.json"

          # Use --out if available
          if python tools/montecito_manifest.py --help 2>/dev/null | grep -qi -- '--out'; then
            python tools/montecito_manifest.py --out "$OUT"
          else
            python tools/montecito_manifest.py
          fi

          # Detect JSON if produced under another name
          if [ ! -f "$OUT" ]; then
            CANDIDATE="$(ls -1t tools/*.json *.json 2>/dev/null | head -n1 || true)"
            [ -n "$CANDIDATE" ] && OUT="$CANDIDATE" || OUT=""
          fi

          echo "manifest_path=$OUT" >> "$GITHUB_OUTPUT"

      - name: Upload manifest artifact
        if: ${{ steps.manifest.outputs.manifest_path != '' }}
        uses: actions/upload-artifact@v5
        with:
          name: montecito-manifest
          path: ${{ steps.manifest.outputs.manifest_path }}
          if-no-files-found: error
